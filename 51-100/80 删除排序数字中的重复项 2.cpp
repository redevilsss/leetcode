#include<iostream>
#include<vector>
using namespace std;


//80 删除排序数组中的重复项2
/*
给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
示例:
给定 nums = [1,1,1,2,2,3],
函数应返回新长度 length = 5, 并且原数组的前五个元素被修改为 1, 1, 2, 2, 3 。
*/

//核心在于在同一个数组中同时维护两个索引，用原索引进行遍历，若元素符合条件
//则用新索引赋值，最终实现
int removeDuplicates(vector<int>& nums) {
	int i = 0;
//i为新数组的下标，遍历一次对原排序数组进行处理
//前两个位置放原来的，从第三个位置开始，只有当此时的值比当前新数组最后两个数大时，才加入j，否则说明此时j位置的数等于新数组最后两个数，继续判断j+1
//以1 1 1 2 2 3为例
//j=2时，nums[j]=nums[i-2]，则跳过第三个1 继续判断两个2 和最后的3
//最终i为5 数组为 1 1 2 2 3
//一个数组，两个索引实现重复项的删除
 //如果每个元素最多3次，那判断就会变成i<3||nums[j]>nums[i-3]
	for (int j = 0; j<nums.size(); j++)
	{
		if (i<2 || nums[j]>nums[i - 2])
			nums[i++] = nums[j];
	}
	return i;
}