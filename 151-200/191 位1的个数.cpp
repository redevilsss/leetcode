#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

//191 位1的个数

/*
编写一个函数，输入是一个无符号整数，返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为汉明重量）。
示例 1：
输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。
*/

//主要是要知道为什么用n = n&(n - 1)来是实现记录1的个数
//因为给n与上（n-1）其实就是去掉n的二进制最右端的1，为什么呢？
/*
给n与上n-1，有两种情况
1. n的最低位为1，那么n-1最低位0，相与后变为0
2. n的最低位不为1，那么n-1要从前面最靠右的1去借，那么从最前面的1到最后的0这一段就从10000变成01111，相与也是0

总之，n&(n-1)就是去掉n最右端的1

*/


int hammingWeight(uint32_t n) {
	int res = 0;
	while (n)
	{
		res++;
		n = n&(n - 1);
	}
	return res;
}